name: CI

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Lint with ruff (if available)
        run: |
          if poetry show ruff > /dev/null 2>&1; then
            poetry run ruff check .
          else
            echo "Ruff not installed, skipping linting"
          fi
        continue-on-error: true

      - name: Type check with mypy (if available)
        run: |
          if poetry show mypy > /dev/null 2>&1; then
            poetry run mypy app/
          else
            echo "MyPy not installed, skipping type checking"
          fi
        continue-on-error: true

      - name: Run tests
        run: poetry run pytest --verbose

      - name: Test build
        run: poetry build
